'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Runtime.Serialization

Namespace srv
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0"),  _
     System.Runtime.Serialization.DataContractAttribute(Name:="CompositeType", [Namespace]:="http://schemas.datacontract.org/2004/07/syslog"),  _
     System.SerializableAttribute()>  _
    Partial Public Class CompositeType
        Inherits Object
        Implements System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged
        
        <System.NonSerializedAttribute()>  _
        Private extensionDataField As System.Runtime.Serialization.ExtensionDataObject
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private BoolValueField As Boolean
        
        <System.Runtime.Serialization.OptionalFieldAttribute()>  _
        Private StringValueField As String
        
        <Global.System.ComponentModel.BrowsableAttribute(false)>  _
        Public Property ExtensionData() As System.Runtime.Serialization.ExtensionDataObject Implements System.Runtime.Serialization.IExtensibleDataObject.ExtensionData
            Get
                Return Me.extensionDataField
            End Get
            Set
                Me.extensionDataField = value
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property BoolValue() As Boolean
            Get
                Return Me.BoolValueField
            End Get
            Set
                If (Me.BoolValueField.Equals(value) <> true) Then
                    Me.BoolValueField = value
                    Me.RaisePropertyChanged("BoolValue")
                End If
            End Set
        End Property
        
        <System.Runtime.Serialization.DataMemberAttribute()>  _
        Public Property StringValue() As String
            Get
                Return Me.StringValueField
            End Get
            Set
                If (Object.ReferenceEquals(Me.StringValueField, value) <> true) Then
                    Me.StringValueField = value
                    Me.RaisePropertyChanged("StringValue")
                End If
            End Set
        End Property
        
        Public Event PropertyChanged As System.ComponentModel.PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
        
        Protected Sub RaisePropertyChanged(ByVal propertyName As String)
            Dim propertyChanged As System.ComponentModel.PropertyChangedEventHandler = Me.PropertyChangedEvent
            If (Not (propertyChanged) Is Nothing) Then
                propertyChanged(Me, New System.ComponentModel.PropertyChangedEventArgs(propertyName))
            End If
        End Sub
    End Class
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0"),  _
     System.ServiceModel.ServiceContractAttribute(ConfigurationName:="srv.IService1")>  _
    Public Interface IService1
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetData", ReplyAction:="http://tempuri.org/IService1/GetDataResponse")>  _
        Function GetData(ByVal value As Integer) As String
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetData", ReplyAction:="http://tempuri.org/IService1/GetDataResponse")>  _
        Function GetDataAsync(ByVal value As Integer) As System.Threading.Tasks.Task(Of String)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction:="http://tempuri.org/IService1/GetDataUsingDataContractResponse")>  _
        Function GetDataUsingDataContract(ByVal composite As srv.CompositeType) As srv.CompositeType
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction:="http://tempuri.org/IService1/GetDataUsingDataContractResponse")>  _
        Function GetDataUsingDataContractAsync(ByVal composite As srv.CompositeType) As System.Threading.Tasks.Task(Of srv.CompositeType)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/insertLogPc", ReplyAction:="http://tempuri.org/IService1/insertLogPcResponse")>  _
        Function insertLogPc(ByVal ip As String, ByVal pcName As String, ByVal machineId As String, ByVal mouseMove As Integer) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/insertLogPc", ReplyAction:="http://tempuri.org/IService1/insertLogPcResponse")>  _
        Function insertLogPcAsync(ByVal ip As String, ByVal pcName As String, ByVal machineId As String, ByVal mouseMove As Integer) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/registerUser", ReplyAction:="http://tempuri.org/IService1/registerUserResponse")>  _
        Function registerUser(ByVal userName As String, ByVal fullName As String, ByVal ip As String, ByVal machineId As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/registerUser", ReplyAction:="http://tempuri.org/IService1/registerUserResponse")>  _
        Function registerUserAsync(ByVal userName As String, ByVal fullName As String, ByVal ip As String, ByVal machineId As String) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/insertPc", ReplyAction:="http://tempuri.org/IService1/insertPcResponse")>  _
        Function insertPc(ByVal ip As String, ByVal pcName As String, ByVal mouseMove As Integer) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/insertPc", ReplyAction:="http://tempuri.org/IService1/insertPcResponse")>  _
        Function insertPcAsync(ByVal ip As String, ByVal pcName As String, ByVal mouseMove As Integer) As System.Threading.Tasks.Task(Of Boolean)
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/insErr", ReplyAction:="http://tempuri.org/IService1/insErrResponse")>  _
        Function insErr(ByVal ip As String, ByVal errorMsg As String) As Boolean
        
        <System.ServiceModel.OperationContractAttribute(Action:="http://tempuri.org/IService1/insErr", ReplyAction:="http://tempuri.org/IService1/insErrResponse")>  _
        Function insErrAsync(ByVal ip As String, ByVal errorMsg As String) As System.Threading.Tasks.Task(Of Boolean)
    End Interface
    
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Public Interface IService1Channel
        Inherits srv.IService1, System.ServiceModel.IClientChannel
    End Interface
    
    <System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")>  _
    Partial Public Class Service1Client
        Inherits System.ServiceModel.ClientBase(Of srv.IService1)
        Implements srv.IService1
        
        Public Sub New()
            MyBase.New
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String)
            MyBase.New(endpointConfigurationName)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As String)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal endpointConfigurationName As String, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(endpointConfigurationName, remoteAddress)
        End Sub
        
        Public Sub New(ByVal binding As System.ServiceModel.Channels.Binding, ByVal remoteAddress As System.ServiceModel.EndpointAddress)
            MyBase.New(binding, remoteAddress)
        End Sub
        
        Public Function GetData(ByVal value As Integer) As String Implements srv.IService1.GetData
            Return MyBase.Channel.GetData(value)
        End Function
        
        Public Function GetDataAsync(ByVal value As Integer) As System.Threading.Tasks.Task(Of String) Implements srv.IService1.GetDataAsync
            Return MyBase.Channel.GetDataAsync(value)
        End Function
        
        Public Function GetDataUsingDataContract(ByVal composite As srv.CompositeType) As srv.CompositeType Implements srv.IService1.GetDataUsingDataContract
            Return MyBase.Channel.GetDataUsingDataContract(composite)
        End Function
        
        Public Function GetDataUsingDataContractAsync(ByVal composite As srv.CompositeType) As System.Threading.Tasks.Task(Of srv.CompositeType) Implements srv.IService1.GetDataUsingDataContractAsync
            Return MyBase.Channel.GetDataUsingDataContractAsync(composite)
        End Function
        
        Public Function insertLogPc(ByVal ip As String, ByVal pcName As String, ByVal machineId As String, ByVal mouseMove As Integer) As Boolean Implements srv.IService1.insertLogPc
            Return MyBase.Channel.insertLogPc(ip, pcName, machineId, mouseMove)
        End Function
        
        Public Function insertLogPcAsync(ByVal ip As String, ByVal pcName As String, ByVal machineId As String, ByVal mouseMove As Integer) As System.Threading.Tasks.Task(Of Boolean) Implements srv.IService1.insertLogPcAsync
            Return MyBase.Channel.insertLogPcAsync(ip, pcName, machineId, mouseMove)
        End Function
        
        Public Function registerUser(ByVal userName As String, ByVal fullName As String, ByVal ip As String, ByVal machineId As String) As Boolean Implements srv.IService1.registerUser
            Return MyBase.Channel.registerUser(userName, fullName, ip, machineId)
        End Function
        
        Public Function registerUserAsync(ByVal userName As String, ByVal fullName As String, ByVal ip As String, ByVal machineId As String) As System.Threading.Tasks.Task(Of Boolean) Implements srv.IService1.registerUserAsync
            Return MyBase.Channel.registerUserAsync(userName, fullName, ip, machineId)
        End Function
        
        Public Function insertPc(ByVal ip As String, ByVal pcName As String, ByVal mouseMove As Integer) As Boolean Implements srv.IService1.insertPc
            Return MyBase.Channel.insertPc(ip, pcName, mouseMove)
        End Function
        
        Public Function insertPcAsync(ByVal ip As String, ByVal pcName As String, ByVal mouseMove As Integer) As System.Threading.Tasks.Task(Of Boolean) Implements srv.IService1.insertPcAsync
            Return MyBase.Channel.insertPcAsync(ip, pcName, mouseMove)
        End Function
        
        Public Function insErr(ByVal ip As String, ByVal errorMsg As String) As Boolean Implements srv.IService1.insErr
            Return MyBase.Channel.insErr(ip, errorMsg)
        End Function
        
        Public Function insErrAsync(ByVal ip As String, ByVal errorMsg As String) As System.Threading.Tasks.Task(Of Boolean) Implements srv.IService1.insErrAsync
            Return MyBase.Channel.insErrAsync(ip, errorMsg)
        End Function
    End Class
End Namespace
